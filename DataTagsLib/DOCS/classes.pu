@startuml

package model {
	class DataTags {
		composeWith( t:DataTags ): DataTags
	}

	package types {
		class TagType {
			+ name:String
			+ info:String
		}

		class ToDoType {
			
		}

		class SimpleType {
			+ values: TagValue[]
		}

		class AggregateType {
			+ itemType: TagType
		}

		class CompoundType {
			+ fields: List<TagType>
		}
	}
	package values {
		class TagValue {
			+ name: String
			+ type: TagType
			+ info: String
		}

		class SimpleValue <<Comparable>> {
			+ ordinal: int
		}

		class ToDoValue {
			
		}

		class AggregateValue {
			values: TagValue[]
		}

		class CompoundValue {
			values: Map<TagType<TagValue>,TagValue>
		}

		enum Answer {
			YES
			NO
		}
	}
	
	package charts {

		class ChartEntity {
			+ id : String
			+ title : String
			+ info  : String
		}

		class FlowChartSet {
			+ source : URL
			+ charts : FlowChart[]
			+ tagTypes : TagType[]
		}

		class FlowChart {
			+ source : URL
			+ start  : DecisionNode
			+ nodes  : DecisionNode[]
		}

		package Node {
			class Node {
				+ chart : FlowChart
			}

			class AskNode {
				+ yes : Node
				+ no  : Node
			}
			class ThroughNode {
				+ nextNode : Node
			}

			class TodoNode 

			class SetNode {
				+ dataTags : DataTags
			}

			class CallNode {
				+ calleeChartId : String
				+ calleeNodeId  : String
			}

			class EndNode
		}
		
	}
}

ChartEntity <|-- Node
ChartEntity <|-- FlowChart
ChartEntity <|-- FlowChartSet
Node <|-- AskNode
Node <|-- ThroughNode
Node <|-- EndNode
ThroughNode <|-- CallNode
ThroughNode <|-- TodoNode
ThroughNode <|-- SetNode
TagType <|-- ToDoType
TagType <|-- SimpleType
TagType <|-- AggregateType
TagType <|-- CompoundType

TagValue <|-- ToDoValue
TagValue <|-- AggregateValue
TagValue <|-- CompoundValue
TagValue <|-- SimpleValue

CompoundValue <|-- DataTags

FlowChartSet "1" *--> "*  " FlowChart : charts
note on link: Mapped by name

FlowChart o--> Node : start

AskNode o--> Node: YES
AskNode o--> Node: NO
SetNode o--> DataTags : tags
ThroughNode o--> Node : next
CallNode --> Node : next
note bottom on link 
	by id
end note

CompoundType <|-- DataTags

AggregateValue ---> "0..*" SimpleValue : items

AggregateType --> SimpleType : itemType

CompoundType --> "0..*" TagType : fieldTypes

CompoundValue --> "0..*" TagValue : fieldValues

FlowChartSet --> "0..*" TagType : tagTypes

TagValue --> TagType : type

@enduml 